@{
    ViewData["Title"] = "Dashboard";
}

<div class="text-center">
    <h1 class="display-4">Dashboard</h1>
</div>
<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <!-- Pie Chart -->
            <div class="card shadow-sm p-3">
                <canvas id="chartPie"></canvas>
            </div>
        </div>

        <div class="col-12 col-md-6 col-lg-8 mb-4">
            <!-- Line Chart -->
            <div class="card shadow-sm p-3">
                <canvas id="chartLine"></canvas>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <!-- Bar Chart -->
            <div class="card shadow-sm p-3">
                <canvas id="chartBar"></canvas>
            </div>
        </div>

        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <!-- Top Categories Bar Chart -->
            <div class="card shadow-sm p-3">
                <canvas id="chartTopCategories"></canvas>
            </div>
        </div>

        <div class="col-12 col-md-6 col-lg-4 mb-4">
            <!-- Expense Frequency by Category Bar Chart -->
            <div class="card shadow-sm p-3">
                <canvas id="chartFrequency"></canvas>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('chartPie');

    fetch('/Expenses/GetExpensesGroupedByCategory')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.categoryName),
                    datasets: [{
                        label: 'Expenses Per Category',
                        data: data.map(d => d.totalAmount),
                    }]
                },
            });
        });

    const lineChart = document.getElementById('chartLine');

    fetch('/Expenses/GetExpensesSumByDate')
        .then(response => response.json())
        .then(data => {
            new Chart(lineChart, {
                type: 'line',
                data: {
                    labels: data.map(d => d.dateAdded),
                    datasets: [{
                        label: 'Expenses Over Time',
                        data: data.map(d => d.totalAmount),
                    }],
                },
            });
        });

    const barChart = document.getElementById('chartBar');

    fetch('/Expenses/GetAvgExpensesByCategory')
        .then(response => response.json())
        .then(data => {
            new Chart(barChart, {
                type: 'bar',
                data: {
                    labels: data.map(d => d.categoryName),
                    datasets: [{
                        label: 'Average Expense per Category',
                        data: data.map(d => d.averageAmount),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 205, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(201, 203, 207, 0.2)'
                        ],
                        borderWidth: 1
                    }],
                },
            });
        });

    const topCatChart = document.getElementById('chartTopCategories');

    fetch('/Expenses/GetTopNExpensesByCategory?num=5')
        .then(res => res.json())
        .then(data => {
            new Chart(topCatChart, {
                type: 'bar',
                data: {
                    labels: data.map(d => d.categoryName),
                    datasets: [{
                        label: 'Top Categories',
                        data: data.map(d => d.totalAmount),
                        backgroundColor: 'rgba(75, 192, 192, 0.7)'
                    }]
                },
                options: {
                    indexAxis: 'y'
                }
            });
        });

    const freqChart = document.getElementById('chartFrequency');

    fetch('/Expenses/GetExpenseFrequencyByCategory')
        .then(res => res.json())
        .then(data => {
            new Chart(freqChart, {
                type: 'bar',
                data: {
                    labels: data.map(d => d.categoryName),
                    datasets: [{
                        label: 'Number of Expenses',
                        data: data.map(d => d.expenseCount),
                        backgroundColor: 'rgba(255, 159, 64, 0.7)'
                    }]
                }
            });
        });

    const avgExpensesChart = document.getElementById('chartAvgExpenses');

    fetch('/Expenses/GetAvgExpensesByCategory')
        .then(res => res.json())
        .then(data => {
            new Chart(avgExpensesChart, {
                type: 'bar',
                data: {
                    labels: data.map(d => d.categoryName),
                    datasets: [{
                        label: 'Average Expenses per Category',
                        data: data.map(d => d.averageAmount),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 205, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(201, 203, 207, 0.2)'
                        ],
                        borderWidth: 1
                    }]
                },
            });
        });
</script>
